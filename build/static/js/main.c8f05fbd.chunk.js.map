{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","href","concat","id","description","content","CustomForm","handleFormSubmit","event","requestType","articleID","target","elements","value","axios","post","then","res","catch","error","put","_this2","this","es_form","onSubmit","label","input","name","placeholder","es_button","htmlType","btnText","React","Component","ArticleList","state","articles","get","setState","Article","Form","articleId","ArticleDetail","article","handleDelete","_this","match","params","delete","history","push","forceUpdate","card","authSuccess","token","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","err","values","onAuth","username","password","errorMessage","message","getFieldDecorator","loading","indicator","className","rules","required","prefix","color","react_router_dom","to","WrappedNormalLoginForm","create","connect","expirationDate","Date","getTime","setItem","RegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","hasFeedback","validator","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","react_router","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","padding","breadcrumb","margin","background","minHeight","children","textAlign","App","onTryAutoSignup","routes","getItem","undefined","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","Object","objectSpread","initialsState","reducer","arguments","length","action","authStart","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8f05fbd.chunk.js","sourcesContent":["import React from \"react\";\nimport { List, Avatar, Icon } from \"antd\";\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst Articles = props => {\n  return (\n    <List\n      itemLayout=\"vertical\"\n      size=\"large\"\n      pagination={{\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 3\n      }}\n      dataSource={props.data}\n      renderItem={item => (\n        <List.Item\n          key={item.title}\n          actions={[\n            <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\n            <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\n            <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />\n          ]}\n          extra={\n            <img\n              width={272}\n              alt=\"logo\"\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n            />\n          }\n        >\n          <List.Item.Meta\n            avatar={<Avatar src={item.avatar} />}\n            title={<a href={`/articles/${item.id}`}>{item.title}</a>}\n            description={item.description}\n          />\n          {item.content}\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default Articles;\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nimport axios from \"axios\";\n\nclass CustomForm extends React.Component {\n  handleFormSubmit = (event, requestType, articleID) => {\n    // event.preventDefault()\n    const title = event.target.elements.title.value;\n    const content = event.target.elements.content.value;\n\n    switch (requestType) {\n      case \"post\":\n        return axios\n          .post(\"http://127.0.0.1:8000/api/\", {\n            title: title,\n            content: content\n          })\n          .then(res => console.log(res))\n          .catch(error => console.log(error));\n      case \"put\":\n        return axios\n          .put(`http://127.0.0.1:8000/api/${articleID}/`, {\n            title: title,\n            content: content\n          })\n          .then(res => console.log(res))\n          .catch(error => console.log(error));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onSubmit={event =>\n            this.handleFormSubmit(\n              event,\n              this.props.requestType,\n              this.props.articleID\n            )\n          }\n        >\n          <Form.Item label=\"Title\">\n            <Input name=\"title\" placeholder=\"Put a title here...\" />\n          </Form.Item>\n          <Form.Item label=\"Content\">\n            <Input name=\"content\" placeholder=\"Enter some content...\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {this.props.btnText}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default CustomForm;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Articles from \"../components/Article\";\nimport CustomForm from \"../components/Form\";\n\nclass ArticleList extends React.Component {\n  state = {\n    articles: []\n  };\n\n  componentDidMount() {\n    axios.get(\"http://127.0.0.1:8000/api/\").then(res => {\n      this.setState({\n        articles: res.data\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Articles data={this.state.articles} />\n        <br />\n        <h2>Create an article</h2>\n        <CustomForm requestType=\"post\" articleId={null} btnText=\"Create\" />\n      </div>\n    );\n  }\n}\n\nexport default ArticleList;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { Card, Button } from \"antd\";\n\nimport CustomForm from \"../components/Form\";\n\nclass ArticleDetail extends React.Component {\n  state = {\n    article: {}\n  };\n\n  componentDidMount() {\n    const articleID = this.props.match.params.articleID;\n    axios.get(`http://127.0.0.1:8000/api/${articleID}/`).then(res => {\n      this.setState({\n        article: res.data\n      });\n    });\n  }\n\n  handleDelete = event => {\n    const articleID = this.props.match.params.articleID;\n    axios.delete(`http://127.0.0.1:8000/api/${articleID}/`);\n    this.props.history.push(\"/\");\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <div>\n        <Card title={this.state.article.title}>\n          <p>{this.state.article.content}</p>\n        </Card>\n        <CustomForm\n          requestType=\"put\"\n          articleID={this.props.match.params.articleID}\n          btnText=\"Update\"\n        />\n        <form onSubmit={this.handleDelete}>\n          <Button type=\"danger\" htmlType=\"submit\">\n            Delete\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ArticleDetail;\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n          this.props.onAuth(values.username, values.password)\n      }\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n    <div>\n        {errorMessage}\n        {   \n            this.props.loading ?\n\n            <Spin indicator={antIcon} />\n\n            :\n\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                {getFieldDecorator('username', {\n                    rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                    <Input\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder=\"Username\"\n                    />,\n                )}\n                </Form.Item>\n\n                <Form.Item>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                    <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />,\n                )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        login\n                    </Button>\n                    Or\n                    <NavLink\n                        style={{marginRight: '10px'}} to='/signup/'\n                    > Signup\n                    </NavLink>\n                </Form.Item>\n            </Form>\n        }\n    </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\n\nclass RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n            this.props.onAuth(\n                values.username,\n                values.email,\n                values.password,\n                values.confirm\n            );\n        }\n        this.props.history.push('/');\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n\n  \n      return (\n\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n                <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Username\"\n                />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input \n                prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Email\"\n            />)}\n          </Form.Item>\n          <Form.Item hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input                     \n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\" />)}\n          </Form.Item>\n          <Form.Item hasFeedback>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                {\n                  validator: this.compareToFirstPassword,\n                },\n              ],\n            })(<Input                     \n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n\n          <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                    Signup\n                </Button>\n                Or\n                <NavLink\n                    style={{marginRight: '10px'}} to='/login/'\n                > Login\n                </NavLink>\n            </Form.Item>\n        </Form>\n      );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);\n  ","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport ArticleList from \"./containers/ArticleListView\";\nimport ArticleDetail from \"./containers/ArticleDetailView\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\n\nconst BaseRouter = () => (\n  <div>\n    <Route exact path=\"/\" component={ArticleList} />\n    <Route exact path=\"/login/\" component={Login} />\n    <Route exact path=\"/articles/:articleID/\" component={ArticleDetail} />\n    <Route exact path=\"/signup/\" component={Signup} />\n  </div>\n);\n\nexport default BaseRouter;\n","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render () {\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['2']}\n                        style={{ lineHeight: '64px' }}\n                    >\n                    {\n                        this.props.isAuthenticated ?\n    \n                        <Menu.Item key=\"2\" onClick={this.props.logout}>\n                            Logout\n                        </Menu.Item>\n                        \n                        :\n    \n                        <Menu.Item key=\"2\">\n                            <Link to=\"/login\">Login</Link>\n                        </Menu.Item>\n    \n                    }\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/\">Posts</Link>\n                        </Menu.Item>\n     \n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        {this.props.children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>The Website 2020 Created by Son Nguyen</Footer>\n            </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CustomLayout);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./routes\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport * as actions from \"./store/actions/auth\";\n\nimport CustomLayout from \"./containers/Layout\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialsState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialsState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers/auth\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}